{
  "ServerOptions": {
    "ServerVersionCheckUrl": "https://www.codeproject.com/ai/version.aspx",
    "ServerDownloadUrl": "https://www.codeproject.com/ai/latest.aspx"
  },

  "MeshOptions": {
    "Enable": true
  },

  "ModuleOptions": {
    // Will we be launching the backend analysis modules when the server starts? (handy to disable
    // for debugging the modules separately)
    "LaunchModules": true,

    // This needs to be set to allow module uploads and installs via the API
    "InstallPassword": "demo-password",

    "RuntimesDirPath": "%ROOT_PATH%/src/runtimes",
    "ModulesDirPath": "%ROOT_PATH%/src/modules",
    "DownloadedModulePackagesDirPath": "%ROOT_PATH%/src/downloads/modules",
    "ModuleInstallerScriptsDirPath": "%ROOT_PATH%/src",
    "PreInstalledModulesDirPath": "%ROOT_PATH%/src/preinstalled-modules",

    // TO TEST MODULE *DOWNLOAD* LOCALLY:
    // When you run create_packages.(sh|bat) it will create the module download packages in
    // /src/downloads/modules. Each time the server is run, it will create a copy of modules.json
    // in /src/downloads/modules. So: point ModuleListUrl to this directory and your modules
    // download listings and module downloads themselves will come from your local disk. The modules
    // will be installed *over* your current modules. *** This could wipe out your modules ***
    // "ModuleListUrl":                   "file://%ROOT_PATH%/src/downloads/modules/modules.json",
    /* NOTE: make sure you've run create_packages.(sh|bat) */

    // TO TEST MODULE *INSTALL* LOCALLY and SAFELY:
    // To test module install safely, specify install folders separate from your working folders
    // "RuntimesDirPath":                 "%ROOT_PATH%/debug/runtimes",
    // "ModulesDirPath":                  "%ROOT_PATH%/debug/modules",
    // "DownloadedModulePackagesDirPath": "%ROOT_PATH%/debug/downloads/modules",
    // "ModuleInstallerScriptsDirPath":   "%ROOT_PATH%/debug",

    // TO DOWNLOAD MODULES FROM AN ALTERNATIVE LOCATION:
    // If you wish to install modules from a location other than the standard module registry then
    // you can set an absolute file:// location, or simply provide a different URL. 
    // NOTE: If you provide a custom file:// location, then it's assumed the folder in which the
    // modules.json file lives will also contain the modules referenced in that JSON file. 
    // For example: you want to test installing in Docker, but not use the registry from CodeProject.
    // You would place your downloadable modules (as packaged zips) and the modules.json file in the
    // same folder (eg /codeproject-packages), and then set 
    //    "ModuleListUrl": "file://~/codeproject-packages/modules.json"
    // You may want to map /codeproject-packages to a folder on the docker host OS for this to work

    // "ModuleListUrl":                "file://C:\\MyModules\\modules.json",          // From local json file on this machine
    // "ModuleListUrl":                "http://localhost/ai/modules/list",            // For a Local CodeProject.com install


    "InitialModules": {} // No initial modules in dev
  }
}